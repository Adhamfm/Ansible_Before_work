version: 2.1

default_docker: &default_docker
  docker:
      - image: circleci/node:13.8.0

commands:
  destroy_environment: # just a name
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command: |
            echo ${CIRCLE_WORKFLOW_ID:0:7}
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            echo ${CIRCLE_WORKFLOW_ID:0:7} 
            aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["69:7e:38:86:68:24:e7:81:f7:c3:2d:28:30:ea:eb:c5"]
      - run: 
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook main-remote.yml -i inventory.txt
  
  smoke_test: # intentionally fail
    docker:
      - image: amazon/aws-cli
    steps:
      # - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            return 1
      - destroy_environment

workflows:
  continuous-delivery:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
